Variable k:ℕ
Variable n:ℕ

Metavariable ρ:Frame
Metavariable σ(ℕ):Frame
Metavariable τ(ℕ):Frame

Metavariable R:Reference
Metavariable S(ℕ):Reference
Metavariable T(ℕ):Reference

Metavariable P(ℕ):Statement

Metatheorem (T(zero))
  P(zero)
  Proof
    P(zero) from R

Metatheorem (T(successor(k)))
  P(successor(k))
  Proof
    P(k) from T(k)
    P(k) ⇒ P(successor(k)) from S(k)
  Therefore
    P(successor(k)) by ModusPonens

Rule (BaseCase)
  Premises
    ρ ⊧ R :: P(zero)
    τ(zero) ⊧ ...ρ
  Conclusion
    τ(zero) ⊧ T(zero) :: P(zero)
  Proof
    τ(zero) ⊧ T(zero) :: P(zero)

Rule (InductionStep)
  Premises
    σ(k) ⊧ S(k) :: (P(k) ⇒ P(successor(k)))
    τ(successor(k)) ⊧ T(k) :: P(k), ...σ(k)
  Conclusion
    τ(successor(k)) ⊧ T(successor(k)) :: P(successor(k))
  Proof
    τ(successor(k)) ⊧ T(successor(k)) :: P(successor(k))

Rule (Induction)
  Premises
    ρ ⊧ R :: P(zero)
    σ(k) ⊧ S(k) :: (P(k) ⇒ P(successor(k)))
  Conclusion
    τ(n) ⊧ T(n) :: P(n)
  Proof
    Premise
      τ(zero) ⊧ ...ρ
    Then
      τ(zero) ⊧ T(zero) :: P(zero) by BaseCase
    τ(zero) ⊧ ...ρ ⇒ τ(zero) ⊧ T(zero) :: P(zero) by ImplicationIntroduction
    Premise
      τ(successor(k)) ⊧ T(k) :: P(k), ...σ(k)
    Then
      τ(successor(k)) ⊧ T(successor(k)) :: P(successor(k)) by InductionStep
    τ(successor(k)) ⊧ T(k) :: P(k), ...σ(k) ⇒ τ(successor(k)) ⊧ T(successor(k)) :: P(successor(k)) by ImplicationIntroduction
    n = zero ∨ n = successor(k) from ZeroOrSuccessor
  Therefore
    τ(n) ⊧ T(n) :: P(n) by ProofByCases


















###
    Premise
      n = zero
    Hence
      τ(zero) ⊧ T(zero) :: P(zero)
    Then
      τ(n) ⊧ T(n) :: P(n)
    n = zero ⇒ τ(n) ⊧ T(n) :: P(n)
    Premise
      n = successor(k)
    Hence
      τ(successor(k)) ⊧ T(successor(k)) :: P(successor(k))
    Then
      τ(n) ⊧ T(n) :: P(n)
    n = successor(k) ⇒ τ(n) ⊧ T(n) :: P(n)
    n = zero ∨ n = successor(k) from ZeroOrSuccessor
